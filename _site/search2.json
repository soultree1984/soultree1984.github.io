[
  
    {
      "title"    : "Map과 HashMap의 차이점은 무엇인가요?",
      "category" : "",
      "tags"     : "interview and java",
      "url"      : "/tech/java-map-hashmap-diffrent/",
      "date"     : "2019-06-12 02:37:00 +0900",
      "content"   : "<blockquote>\n  <p>Map과 HashMap의 차이점은 무엇인가요?</p>\n</blockquote>\n\n<p>몇 년전 모회사에 면접 보러 갔을 때 1차 기술면접 자리에서 면접관이 나에게 했던 질문이었다.<br />\n순간 나는 “<strong>Map</strong> 인터페이스를 구현한 클래스가 <strong>HashMap</strong> 입니다.” 라고 대답을 했는데,<br />\n면접관은 아무런 말도 없이 고개만 끄덕였고 지금 생각해봐도 저걸 왜 물어봤는지 도무지 모르겠다.<br />\n설마 저 대답을 원한건 아니었기를… 횡설수설한 기억 뿐인 면접이었지만 의외로 1차는 합격을 했고,<br />\n최종 2차에서 떨어졌다. 😱</p>\n\n<h2 id=\"그럼-hashmap-은-어떻게-동작하나요\">“그럼 HashMap 은 어떻게 동작하나요?”</h2>\n\n<p>만약 이후 질문이 저랬다면 버벅대다 대답도 못했을 테지….. 😭<br /> \n<strong>HashMap</strong>의 동작에 대해서는 추후에 자세히 다룰 예정이다.<br />\n참고로 <a href=\"https://www.youtube.com/watch?v=S7vni1hdsZE\">유투브 포프TV</a> 를 운영하시는 포프님은 개발자의 기본기를 HashTable 이라고 말씀하시면서,<br /> \n개발자 면접때 물어본다고 하셨다.<br /></p>\n\n<p>다시 주제로 돌아가서 <strong>Map</strong>은 <strong>Collection Framework</strong>에 속한 인터페이스중 하나로 키와 값을 하나의 쌍으로<br />\n묶어서 저장하는 자료 구조 이다.<br />\n<code class=\"highlighter-rouge\">( Collection Framework 란 다수의 데이터를 처리하는 자료 구조를 통칭하는 개념이다.)</code></p>\n\n<h3 id=\"키의-중복을-허용하지-않는다는-것이-map의-핵심\">키의 중복을 허용하지 않는다는 것이 Map의 핵심.</h3>\n\n<p>이러한 <strong>Map</strong>을 구현한 클래스중에 하나가 <strong>HashMap</strong> 이다. <br />\n이외에도 <strong>HashTable, HashMap, ConcurrentHashMap, LinkedHashMap, TreeMap</strong> 등이 있다.<br />\n<strong>HashTable</strong>은 Java 1.0 부터 있던 API 이고, <strong>HashMap</strong>은 Java 1.2 에서 추가된 API 이다.<br />\n비슷한 이름을 가진 두 녀석, <strong>HashTable</strong> 과 <strong>HashMap</strong>의 차이점을 살펴보면,<br /></p>\n\n<table>\n  <thead>\n    <tr>\n      <th>비교</th>\n      <th>HashTable</th>\n      <th>HashMap</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Synchronized</td>\n      <td>Y</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>Thread-Safe</td>\n      <td>Y</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>Null Key</td>\n      <td>N</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>Null Value</td>\n      <td>N</td>\n      <td>Y</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><strong>Multi-Thread</strong> 환경이 아니라면 <strong>Synchronized</strong>가 없는 <strong>HashMap</strong>을 쓰는 것이 아무래도 성능상 이롭다.<br />\n그러나 <strong>Synchronized</strong> 가 필요한 상황일지라도 <strong>HashTable</strong>은 오래된 클래스라서 최근에는 사용하지 않고,<br />\n<strong>ConcurrentHashMap</strong> 라는 <strong>HashMap</strong>에서 <strong>Synchronized</strong>가 추가된 클래스를 사용하길 권장한다.<br />\n하지만 <strong>Multi-Thread</strong> 환경에서 개발 해본 적이 없어서 써본적은 없다. 사실 포스팅하면서 처음 봤다… 😱</p>\n\n<h3 id=\"자-이제-설명은-됐고-코드를-보자\">자 이제 설명은 됐고, 코드를 보자.</h3>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n    <span class=\"n\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">,</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">hashMap</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">HashMap</span><span class=\"o\">&lt;&gt;();</span>\n    \n    <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"white\"</span><span class=\"o\">,</span><span class=\"s\">\"흰색\"</span><span class=\"o\">);</span>\n    <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"red\"</span><span class=\"o\">,</span><span class=\"s\">\"빨강\"</span><span class=\"o\">);</span>\n    <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"yellow\"</span><span class=\"o\">,</span><span class=\"s\">\"노랑\"</span><span class=\"o\">);</span>\n    <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"green\"</span><span class=\"o\">,</span><span class=\"s\">\"녹색\"</span><span class=\"o\">);</span>\n    <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"blue\"</span><span class=\"o\">,</span><span class=\"s\">\"파랑\"</span><span class=\"o\">);</span>\n    <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"pink\"</span><span class=\"o\">,</span><span class=\"s\">\"핑크\"</span><span class=\"o\">);</span>\n\n    <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">key</span> <span class=\"o\">:</span> <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">keySet</span><span class=\"o\">()){</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"key is : \"</span> <span class=\"o\">+</span> <span class=\"n\">key</span>  <span class=\"o\">+</span> <span class=\"s\">\", value is : \"</span> <span class=\"o\">+</span> <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">key</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<h3 id=\"출력-결과\">출력 결과</h3>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"c1\">// key is : red, value is : 빨강</span>\n<span class=\"c1\">// key is : pink, value is : 핑크</span>\n<span class=\"c1\">// key is : green, value is : 녹색</span>\n<span class=\"c1\">// key is : white, value is : 흰색</span>\n<span class=\"c1\">// key is : blue, value is : 파랑</span>\n<span class=\"c1\">// key is : yellow, value is : 노랑</span>\n\n</code></pre></div></div>\n\n<p>결과값을 보면 입력한 순서대로 출력되면 좋겠지만 뒤죽박죽으로 출력이 된다.<br />\n이럴때 필요한게 <strong>TreeMap</strong>, <strong>LinkedHashMap</strong> 이 있다. 위에 얘기했던 면접때 <strong>LinkedHashMap</strong> 에 대한<br />\n질문도 있었는데, 창피하게도 제대로 대답은 못했고 안써봐서 잘 모른다고 했다. <br />\n일할때도 <strong>ArrayList&lt;HashMap&gt;</strong> 형태로만 써왔고, 왜 쓰는지에 대해선 생각해본적 없었다.<br />\n그냥 남들이 쓰니까 썼다. 역시 모르면 물어봐야한다.<br />\n돌이켜보면 <strong>LinkedHashMap</strong> 보다 성능상 나아서 다들 그렇게 썼나보다 라고 생각하고 싶지만,<br />\n왠지 그들도 모르고 그냥 쓴 것 같다……. 😰</p>\n\n<h3 id=\"순서를-보장하는-treemap-과-linkedhashmap\">순서를 보장하는 TreeMap 과 LinkedHashMap.</h3>\n\n<p>정확하게 얘기 하면 <strong>LinkedHashMap</strong>는 입력된 순서를 보장하고, <strong>TreeMap</strong>는 정렬된 순서를 보장한다.<br />\n <strong>Collections.sort</strong>에 <strong>Compartor</strong> 구현으로 순서를 변경 할 수 있다.<br />\n기본 정렬 순서는 숫자 &gt; 알파벳 대문자 &gt; 알파벳 소문자 &gt; 한글 순이다.<br />\n<code class=\"highlighter-rouge\">(TreeMap은 내부적으로 Red-Black Tree로 저장한다. Red-Black Tree 대해서는 나중에 다시 정리 할 예정.)</code></p>\n\n<h3 id=\"자-이제-설명은-됐고-코드를-보자-1\">자 이제 설명은 됐고, 코드를 보자.</h3>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n    <span class=\"n\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">,</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">linkedHashMap</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">LinkedHashMap</span><span class=\"o\">&lt;&gt;();</span>\n    \n    <span class=\"n\">linkedHashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"white\"</span><span class=\"o\">,</span><span class=\"s\">\"흰색\"</span><span class=\"o\">);</span>\n    <span class=\"n\">linkedHashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"red\"</span><span class=\"o\">,</span><span class=\"s\">\"빨강\"</span><span class=\"o\">);</span>\n    <span class=\"n\">linkedHashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"yellow\"</span><span class=\"o\">,</span><span class=\"s\">\"노랑\"</span><span class=\"o\">);</span>\n    <span class=\"n\">linkedHashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"green\"</span><span class=\"o\">,</span><span class=\"s\">\"녹색\"</span><span class=\"o\">);</span>\n    <span class=\"n\">linkedHashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"blue\"</span><span class=\"o\">,</span><span class=\"s\">\"파랑\"</span><span class=\"o\">);</span>\n    <span class=\"n\">linkedHashMap</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"pink\"</span><span class=\"o\">,</span><span class=\"s\">\"핑크\"</span><span class=\"o\">);</span>\n\n    <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">key</span> <span class=\"o\">:</span> <span class=\"n\">linkedHashMap</span><span class=\"o\">.</span><span class=\"na\">keySet</span><span class=\"o\">()){</span>\n        <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">println</span><span class=\"o\">(</span><span class=\"s\">\"key is : \"</span> <span class=\"o\">+</span> <span class=\"n\">key</span>  <span class=\"o\">+</span> <span class=\"s\">\", value is : \"</span> <span class=\"o\">+</span> <span class=\"n\">hashMap</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">key</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n\n</code></pre></div></div>\n\n<h3 id=\"출력-결과-1\">출력 결과</h3>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"c1\">// key is : white, value is : 흰색</span>\n<span class=\"c1\">// key is : red, value is : 빨강</span>\n<span class=\"c1\">// key is : yellow, value is : 노랑</span>\n<span class=\"c1\">// key is : green, value is : 녹색</span>\n<span class=\"c1\">// key is : blue, value is : 파랑</span>\n<span class=\"c1\">// key is : pink, value is : 핑크</span>\n\n</code></pre></div></div>\n\n<p>출력결과를 보면 입력된 순서가 보장됨을 확인 할 수 있다.<br />\n<strong>LinkedHashMap</strong> 은 <strong>Doubly-Linked List</strong>를 내부에 유지함으로써 입력된 자료의 순서를 보장한다.<br />\n그리고 이번 포스팅에선 대략적인 내용만 정리하고 동작 방법이나 성능 등 자세한 포스팅은 나중에 다룬다.<br /></p>\n\n<p>앞으로도 면접 때 들었던 질문을 꾸준히 포스팅 할 예정이다. 👌</p>\n"
    } ,
  
    {
      "title"    : "블로그를 만들게 된 이유.",
      "category" : "",
      "tags"     : "talks",
      "url"      : "/talk/why-blog/",
      "date"     : "2019-06-12 02:37:00 +0900",
      "content"   : "<p>서핑을 하다 좋은 포스팅을 발견했을 때, 면접관에게 들었던 질문 혹은 어떠한 문제를 해결하기 위해 했던 삽질과 노력들을 어딘가에 정리 할 수 있으면 좋을 것 같다는 생각은 항상 하고 있었다.\n누군가에게 보여준다기 보다 내가 정리할 곳이 필요해서 여러 차례 시도는 해봤지만,\n바쁘다는 핑계와 그럴듯하게 합리화 시킨 못한다는 이유로 말로만 하기 일쑤였는데 \n이번에 계획에 없던 휴식 기간에 만들어보기로 하고 그동안 눈여겨 보고있던 <a href=\"https://pages.github.com\">GitHub Pages</a>로 만들어 보았다.\n포스팅의 종류는 알고리즘이나 디자인패턴 FrontEnd, BackEnd 등 알고있는 모든 분야를 가리지 않을 예정이지만,\n그래도 주력은 <strong>Spring</strong> 이다.</p>\n\n<p>넓고 깊이 아는 개발자가 되고 싶다.<br />\n그러기 위해 항상 공부하는 개발자 이고 싶다.<br />\n흰머리가 나도 코딩하는 그런 사람이고 싶다.<br /></p>\n\n<h2 id=\"언제나-그러고-싶다\">언제나 그러고 싶다.</h2>\n\n"
    } 
  


  
    
,
  {
    "title"    : "404",
    "category" : "",
    "tags"     : "",
    "url"      : "/404.html",
    "date"     : "",
    "content"   : "<div style=\"text-align:center;\">\n    <h1>404 Not Found</h1>\n</div>\n"
  }
    
  
    
,
  {
    "title"    : "About Me.",
    "category" : "",
    "tags"     : "about",
    "url"      : "/about",
    "date"     : "",
    "content"   : "<hr />\n<h1 id=\"intro\">Intro</h1>\n<blockquote>\n  <p>이 블로그는 제가 그동안 경험하고 공부했던 내용들을 정리하기 위해 만들었습니다.<br /> \n참고로 본 페이지는 <a href=\"https://tech.kakao.com/\">카카오 기술 블로그</a> 소스를 바탕으로 만들었습니다.<br />\n주로 <a href=\"https://spring.io/\">Spring</a>으로 웹 프로젝트를 수행 했으며, 풀스택 개발자기 되기 위해,<br /> \n언제나 노력하는 호기심 많은 12년차 개발자 입니다.<br />\n최근에는 <a href=\"https://vuejs.org/\">Vue</a> 와 <a href=\"https://www.python.org/\">Python</a> 에도 관심이 있습니다.</p>\n</blockquote>\n\n<hr />\n<h1 id=\"projects\">Projects</h1>\n\n<ul>\n  <li>E-Sports 글로벌 홈페이지 구축.</li>\n  <li>게임사 통합 운영 플랫폼 구축.</li>\n  <li>제조업 연구소 차세대 연구 관리 시스템 구축.</li>\n  <li>공동 주택 관리 솔루션 런칭.</li>\n  <li>통신사 기상정보 플랫폼 API 담당.</li>\n  <li>통신사 위치기반 소셜 서비스 런칭.</li>\n</ul>\n\n<hr />\n<h1 id=\"pr--skills\">PR &amp; Skills</h1>\n\n<blockquote>\n  <p>B2C, Admin, REST API, 솔루션, 기업 연구소, 게임사 통합 운영 플랫폼, 글로벌 홈페이지 등 \n<br />\n다양한 종류의 풍부한 프로젝트 수행 경험, 통신사의 위치 기반 소셜 서비스 프로젝트 런칭 경험.</p>\n</blockquote>\n\n<ul>\n  <li>Language : Java, HTML, Android</li>\n  <li>OS : AWS, Linux, Unix, Windows Server 2003</li>\n  <li>Platform : Spring Boot, Spring, MyBatis</li>\n  <li>Database : MySQL, Oracle</li>\n  <li>Development Tool : Intelli J IDEA, Eclipse, Putty, Secure CRT, Oracle Sql Developer, MySQL Workbench,<br />\n                  VM Ware Workstation, Nexacro, SourceTree, JIRA, Confluence</li>\n  <li>Software Configuration Management : Subversion, Git</li>\n  <li>Debugging Tool : ADB(Android Debug Bridge), Http Watch, Chrome Advanced Rest Client, JSON Viewer</li>\n</ul>\n"
  }
    
  
    
,
  {
    "title"    : "Authors",
    "category" : "",
    "tags"     : "",
    "url"      : "/authors/",
    "date"     : "",
    "content"   : "\n<ul>\n  <li><a href=\"/authors/soultree1984\">soultree1984</a></li>\n</ul>\n\n"
  }
    
  
    
,
  {
    "title"    : "Tech",
    "category" : "",
    "tags"     : "",
    "url"      : "/",
    "date"     : "",
    "content"   : "<script>\n    $(\"#menu li\").removeClass(\"active\").eq(0).addClass(\"active\");\n</script>\n\n<ul id=\"post-list\">\n\n    \n\n        <li class=\"post-item post \">\n    <a href=\"/tech/java-map-hashmap-diffrent/\">\n        <h3 class=\"post-title\">Map과 HashMap의 차이점은 무엇인가요?</h3>\n        <p class=\"post-excerpt\">Map과 HashMap의 차이점은 무엇인가요? 몇 년전 모회사에 면접 보러 갔을 때 1차 기술면접 자리에서 면접관이 나에게 했던 질문이었다. 순간 나는 “Map 인터페이스를 구현한 클래스가 HashMap 입니다.” 라고 대답을 했는데, 면접관은 아무런 말도 없이 고개만 끄덕였고 지금 생각해봐도 저걸 왜 물어봤는지 도무지 모르겠다. 설마 저 대답을 원한건 아니었기를… 횡설수설한 기억 뿐인 면접이었지만 의외로 1차는 합격을 했고, 최종 2차에서 떨어졌다. 😱 “그럼 HashMap 은 어떻게 동작하나요?” 만약 이후 질문이 저랬다면 버벅대다 대답도 못했을 테지….. 😭 HashMap의 동작에...</p>\n    </a>\n    <p class=\"post-tags\">\n        \n            <a href=\"/tags/interview\" title=\"interview\"\n               class=\"tag tag-interview\">interview</a>\n        \n            <a href=\"/tags/java\" title=\"java\"\n               class=\"tag tag-java\">java</a>\n        \n    </p>\n    <div class=\"post-meta\">\n        \n\n        <!--<a href=\"/authors/soultree1984\">-->\n        <a href=\"javascript:void(0);\">\n            <div class=\"author-image\"\n                 style=\"background-image:url(/files/authors/profile2.jpg);\">\n                <span class=\"sr-only\">soultree1984's profile image</span>\n            </div>\n            <p class=\"author-name\">soultree1984</p>\n        </a>\n        <p class=\"post-date\">2019-06-12 02:37</p>\n    </div>\n    <!--<div class=\"clearfix\"></div>-->\n</li>\n\n\n    \n\n</ul>\n\n<!--\n<ul id=\"pagination\" role=\"navigation\">\n    \n        \n        \n            <li id=\"page-prev\" class=\"disabled\"><span class=\"sr-only\">No Previous Page</span></li>\n        \n        \n            \n                <li class=\"page-number active\">1</li>\n                \n        \n        \n            <li id=\"page-next\" class=\"disabled\"><span class=\"sr-only\">No Next Page</span></li>\n        \n    \n</ul>\n-->\n"
  }
    
  
    
  
    
  
    
  
    
  
    
  
    
  
    
,
  {
    "title"    : "Talk",
    "category" : "",
    "tags"     : "refer",
    "url"      : "/talks",
    "date"     : "",
    "content"   : "<script>\n    $(\"#menu li\").removeClass(\"active\").eq(1).addClass(\"active\");\n</script>\n\n<ul id=\"post-list\">\n    {% for post in site.categories.talk %}\n        {% include item_talks.html %}\n    {% endfor %}\n</ul>"
  }
    
  
]
