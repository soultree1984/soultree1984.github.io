[
  
    {
      "title"    : "kakao의 오픈소스 Ep9 - Khaiii : 카카오의 딥러닝 기반 형태소 분석기",
      "category" : "",
      "tags"     : "opensource, khaiii, deep-learning, cnn, and ai",
      "url"      : "/tech/khaiii/",
      "date"     : "2019-06-12 02:37:00 +0900",
      "content"   : "<p><a id=\"forkme\" href=\"https://github.com/kakao/khaiii\"></a></p>\n\n<blockquote>\n  <p>“카카오의 오픈소스를 소개합니다” 아홉 번째는 jamie.lim과 자연어 처리 파트 동료들이 함께 개발한 <strong>khaiii(Kakao Hangul Analyzer III)</strong>입니다.</p>\n\n  <p>khaiii는 세종 코퍼스를 이용하여 CNN(Convolutional Neural Network, 합성곱 신경망) 기술을 적용해 학습한 형태소 분석기입니다. 디코더를 C++로 구현하여 GPU 없이도 비교적 빠르게 동작하며, Python 바인딩을 제공하고 있어서 편리하게 사용하실 수 있습니다.</p>\n\n  <p>앞으로 오픈소스 생태계를 통해 자연어 처리를 연구하는 분들께 도움이 되고, 또한 부족한 부분에 대해 도움을 받을 수 있으면 좋겠습니다.</p>\n\n  <p>아래는 카카오 AI 리포트에 포스팅한 <a href=\"https://brunch.co.kr/@kakao-it/308\">카카오의 딥러닝 기반 형태소 분석기</a>를 옮긴 것입니다.</p>\n</blockquote>\n\n<p><strong>khaiii</strong>는 “Kakao Hangul Analyzer III”의 첫 글자들만 모아 만든 이름으로 카카오에서 개발한 세 번째 형태소 분석기입니다. 두 번째 버전의 형태소 분석기 이름인 dha2(Daumkakao Hangul Analyzer 2)를 계승한 이름이기도 합니다. 기존의 분석기(dha1, dha2)는 규칙 기반으로 동작하기 때문에 사람이 직접 지속적으로 규칙을 입력해야 하지만, khaiii는 데이터 기반으로 동작하기 때문에 기계학습 알고리즘(딥러닝)을 사용합니다.</p>\n\n<p>‘형태소’는 언어학에서 특정한 의미를 가지는 가장 작은 말의 단위로 발화체 내에서 따로 떼어낼 수 있는 것을 말합니다. 즉, 더 분석하면 뜻이 없어지는 말의 단위입니다. 형태소 분석기는 단어를 보고 형태소 단위로 분리해내는 소프트웨어를 말합니다. 이러한 형태소 분석은 자연어 처리의 가장 기초적인 절차로 이후 구문 분석이나 의미 분석으로 나아가기 위해 가장 먼저 이루어져야 하는 과정이라고 볼 수 있습니다<sup id=\"fnref:1\"><a href=\"#fn:1\" class=\"footnote\">1</a></sup>.</p>\n\n<h3 id=\"데이터-기반\">데이터 기반</h3>\n\n<p>기존 버전이 사전과 규칙에 기반해 분석을 하는 데 반해 khaiii는 데이터(혹은 기계학습) 기반의 알고리즘을 이용하여 분석을 합니다. 학습에 사용한 코퍼스(corpus)는 국립국어원에서 배포한 21세기 세종계획 최종 성과물을 카카오에서 일부 내용을 추가하거나 오류를 수정한 것입니다. 전처리 과정에서 오류가 발생하는 문장을 제외하고 약 85만 개의 문장, 그리고 1천만 개 어절의 코퍼스를 사용하여 학습을 했습니다. 코퍼스와 품사 체계에 대한 구체적인 내용은 뒤에 자세히 설명드리도록 하겠습니다.</p>\n\n<h3 id=\"알고리즘\">알고리즘</h3>\n\n<p>기계학습을 위해서는 신경망 알고리즘들 중 CNN(Convolutional Neural Network, 콘볼루션 신경망)을 사용하였습니다. 한국어에서 형태소 분석은 자연어 처리를 위한 가장 기본적인 전처리 과정이므로 속도가 매우 중요한 요소라고 생각합니다. 따라서 자연어 처리에 많이 사용하는 LSTM(Long-Short Term Memory, 장단기 메모리)와 같은 RNN(Recurrent Neural Network, 순환 신경망) 알고리즘은 속도 면에서 활용도가 떨어질 것으로 예상하여 고려 대상에서 제외하였습니다.</p>\n\n<h3 id=\"음절-기반-모델\">음절 기반 모델</h3>\n\n<p>한국어 형태소 분석 결과는 원형 복원, 불규칙 활용 등의 이유로 입력 문자와는 형태와 길이가 달라지게 됩니다. 예를 들어, ‘져줄래’와 같은 입력 어절의 분석 결과는 ’지/VV + 어/EC + 주/VX + ㄹ래/EF’와 같이 출력의 길이와 형태 모두 쉽게 예측이 가능하지 않습니다. 이러한 길이의 불일치 문제가 있기에 기계학습 분류기에 기반한 모델의 출력을 설계하는 부분이 중요합니다.</p>\n\n<p>기존에 고전적인 HMM(Hidden Markov Model, 은닉 마르코프 모델), CRF(Conditional Random Fields, 조건부 랜덤 필드) 등의 방법에서는 트라이(TRIE) 사전을 이용하여 들쑥날쑥한 형태의 격자(lattice)를 비터비(Viterbi) 알고리즘을 통해 최적의 경로를 탐색하는 형식으로 많이 접근해 왔습니다.</p>\n\n<p>최근의 딥러닝 방법으로는 번역에서 많이 사용하는 seq2seq(sequence to sequence) 방식을 가장 먼저 생각해 볼 수 있습니다. ‘져, 줄, 래’라는 입력 원문에 대해 인코더를 통해 latent 벡터를 생성하고 디코더를 통해 차례대로 ’지/VV, 어/EC, 주/VX, ㄹ래/EF’라는 출력을 생성하는 것입니다. 여기에 당연히 어텐션(attention) 메커니즘을 적용할 수 있겠습니다. 그러나 seq2seq 방식에서 주로 사용하는 RNN은 속도가 느리고, 입력 음절과 출력 형태소 간의 연결 정보가 끊어져 형태소 분석 결과가 입력의 어느 부분으로부터 나왔는지에 대한 정보가 소실되는 단점이 있습니다. 이에 khaiii는 입력된 각 음절에 대해 하나의 출력 태그를 결정하는 분류 문제로 접근합니다.</p>\n\n<h3 id=\"음절과-형태소의-정렬\">음절과 형태소의 정렬</h3>\n\n<p>입력의 경우 각각의 음절이 분류 대상입니다. 형태소 분석 결과를 다시 형태소 각각의 음절 별로 나누어 IOB1 방식으로 표현하면 다음과 같습니다.</p>\n\n<p><img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/ESzWrCKIx10bcJsWhBsKMY2QMyQ.png\" alt=\"[ 표 1 ] 형태소 분석 결과를 각 음절 별로 나누어 IOB1 방식으로 표현한 결과\" />￼</p>\n\n<p>이렇게 나뉜 각각의 음절들은 아래와 같이 정렬됩니다.\n<img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/EU142ZOXXekH8q_ysOHsdp4RY_Q.png\" alt=\"[ 표 2 ] [ 표 1 ]의 음절들을 정렬한 결과\" /></p>\n\n<p>‘했’은 ‘I-VX:I-EP:0’라는 복합 태그를 갖는 반면, 나머지 음절들은 단순 태그를 갖습니다. 복합 태그와 단순 태그의 차이는 원형 복원 사전의 사용 여부와 관련이 있습니다. 음절과 복합 태그를 합친 ‘했/I-VX:I-EP:0’를 key로 하여 원형 복원 사전을 검색하면 ‘하/I-VX, 였/I-EP’이라는 복원 정보를 얻게 됩니다. 이렇게 음절과 형태소를 정렬하고 태그로부터 원형을 복원하는 방식은 심광섭 교수님의 논문<sup id=\"fnref:2\"><a href=\"#fn:2\" class=\"footnote\">2</a></sup>에서 기본적인 아이디어를 차용했습니다.</p>\n\n<p>코퍼스에서 모든 음절에 대해 형태소 분석 결과와 정렬을 수행하고, 필요한 경우 복합 태그를 ‘I-VX:I-EP:1’, ‘I-VX:I-EP:2’와 같이 순차적으로 생성하면 자동으로 원형 복원 사전도 생성하게 됩니다. 아래는 이렇게 생성된 학습 데이터의 예시입니다.\n<img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/VISNx8lH8Lt0c-9-DIky58XQTM0.png\" alt=\"[ 표 3 ] 원형 복원 사전으로 생성된 학습 데이터의 예시\" />￼</p>\n\n<p>그리고 아래는 동시에 자동으로 생성된 원형 복원 사전입니다.\n<img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/GF1Jy5U2cxOQc7RJPQRgrSelaJY.png\" alt=\"[ 표 4 ] 동시에 자동으로 생성된 원형 복원 사전\" /></p>\n\n<p>이렇게 모든 코퍼스 내 어절의 정렬을 마치고 나면 92개의 고정된 단순 태그와 400여 개의 복합 태그가 생성됩니다. 이때 정렬은 수작업으로 작성한 규칙과 매핑(mapping) 사전을 사용해 자동으로 정렬이 이뤄지고, 정렬에 실패한 문장은 학습에서 제외했습니다. 그러면 비로소 각각의 입력 음절에 대해 500여 개의 출력 태그를 판단하는 분류 문제로 접근할 수 있게 됩니다.</p>\n\n<h3 id=\"윈도우와-문맥\">윈도우와 문맥</h3>\n\n<p>하나의 음절에 대한 태그를 판단하기 위해 윈도우 크기만큼 좌/우로 확장한 문맥을 사용합니다. 예를 들어 ‘프랑스의 세계적인 의상 디자이너 엠마누엘 …’이라는 입력에 대해 ‘세’라는 음절의 태그를 판단하기 위해 윈도우 크기가 7인 문맥은 아래와 같습니다.\n<img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/Zv1-KBLayL1aJawlyxyhYdcc-dI.png\" alt=\"[ 표 5 ] 위의 입력에 대해 ‘세'라는 음절의 태그를 판단하기 위한 윈도우 크기 7의 문맥\" />￼</p>\n\n<p>실질적인 음절 이외에 가상의 음절들도 문맥으로 사용하는데, 이는 아래와 같습니다.\n<img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/4pScfTux2KvHatzQGMmWx1php0w.png\" alt=\"[ 표 6 ] 문맥으로 사용하는 가상의 음절들\" /></p>\n\n<h3 id=\"네트워크-구조\">네트워크 구조</h3>\n\n<p><img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/DXlTnCNYfeYzWIR4kN428VouYKQ.png\" alt=\"[그림 1] khaiii의 CNN 모델 네트워크 구조\" />￼</p>\n\n<p>위 네트워크는 윈도우가 7이고 음절의 임베딩 크기는 5, 커널(kernel)의 크기가 3인 4개의 필터를 사용한 콘볼루션(convolution)입니다. 크기가 [15, 5]인 문맥을 하나의 필터를 거치면 길이가 13인 하나의 벡터가 생성되고 전체에 대해 최댓값 선택(max pooling)을 적용하면 하나의 스칼라 값(scalar value)이 됩니다. 4개의 필터를 사용했으므로 최종적으로 길이가 4인 벡터가 나오게 됩니다.</p>\n\n<p>이런 방식으로 커널의 크기가 {2, 3, 4, 5}에 대해 각각 길이가 4인 벡터를 연결하여 길이가 16인 벡터를 생성합니다. 이것을 히든(hidden) 레이어와 출력 레이어를 거쳐 최종적으로 태그를 결정하게 됩니다.</p>\n\n<p>실제로 베이스(base) 모델의 경우 윈도우 크기가 3, 임베딩 크기는 30입니다. 필터의 출력 차원은 임베딩과 같이 30을 사용했고, {2, 3, 4, 5} 네 종류의 커널을 거치고 나면 길이가 120인 벡터가 생성됩니다. 최종 출력 태그 개수는 500이며 hidden 레이어의 차원은 120과 500의 중간인 310입니다.</p>\n\n<p>이러한 콘볼루션 방식은 김윤님의 문장 분류에 관한 논문<sup id=\"fnref:3\"><a href=\"#fn:3\" class=\"footnote\">3</a></sup>을 참고하였습니다. 문장을 문맥에 대입하고 단어는 음절에 대입하여 적용하면 됩니다.</p>\n\n<h3 id=\"성능\">성능</h3>\n\n<h5 id=\"1-정확도\">1. 정확도</h5>\n\n<p>CNN 모델의 주요 하이퍼파라미터(hyperparameter)는 분류하려는 음절의 좌/우 문맥의 크기를 나타내는 win 값과, 음절 임베딩의 차원을 나타내는 emb 값입니다. win 값은 {2, 3, 4, 5, 7, 10}의 값을 가지며, emb 값은 {20, 30, 40, 50, 70, 100, 150, 200, 300, 500}의 값을 가집니다. 따라서 이 두 가지 값의 조합은 6 x 10으로 총 60가지를 실험하였고 아래와 같은 성능을 보였습니다. 성능 지표는 정확률과 재현율의 조화 평균값인 F-Score입니다.\n<img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/C8mVo7TGusVOtv8d94PYFNMgEMM.png\" alt=\"[그림 2] 하이퍼파라미터 win, emb 변화에 따른 F-Score\" />￼</p>\n\n<p>파라미터 win의 경우 3 혹은 4에서 가장 좋은 성능을 보이며 그 이상에서는 오히려 성능이 떨어집니다. 파라미터 emb의 경우 150까지는 성능도 같이 높아지다가 그 이상에서는 별 차이가 없습니다. 최상위 5위 중 비교적 작은 모델은 win=3, emb=150으로 F-Score 값은 97.11입니다. 이 모델을 라지(large) 모델이라 명명합니다.</p>\n\n<h5 id=\"2-속도\">2. 속도</h5>\n<p>모델의 크기가 커지면 정확도가 높아지기는 하지만 그만큼 계산량 또한 많아져 속도가 떨어집니다. 그래서 적당한 정확도를 갖는 모델 중에서 크기가 작아 속도가 빠른 모델을 기본(base) 모델로 선정하였습니다. F-Score 값이 95 이상이면서 모델의 크기가 작은 모델은 win=3, emb=30, F-Score의 값은 95.30입니다.\n속도를 비교하기 위해 1만 문장(총 903KB, 문장 평균 91)의 텍스트를 분석하여 비교했습니다. 기본 모델의 경우 약 10.5초, large 모델의 경우 약 78.8초가 걸립니다.</p>\n\n<h3 id=\"코퍼스\">코퍼스</h3>\n\n<h5 id=\"1-세종-코퍼스\">1. 세종 코퍼스</h5>\n<p>세종 코퍼스는 국립국어원에서 1998년부터 2007년까지 10년간 진행한 ‘21세기 세종계획’ 사업의 결과물 중 코퍼스 부분을 말합니다. 여기에 있는 다양한 코퍼스 중 형태 분석 말뭉치가 바로 khaiii의 학습 데이터입니다. 세종 코퍼스에 관한 자세한 내용은 황용주 님이 새국어생활에 2016년에 게재한 글<sup id=\"fnref:4\"><a href=\"#fn:4\" class=\"footnote\">4</a></sup>을 참고하시기 바랍니다.\n세종 결과물 배포 이후 이를 활용한 여러 논문이 발표되고, 여러 차례 시스템 경진대회의 개최와 오픈소스 바람으로 인해 세종 코퍼스와 품사 집합은 사실상 표준으로 자리 잡고 있습니다. 그러나 1천만 개 어절이라는 방대한 양에 걸맞게 오류 또한 많이 포함하고 있습니다.</p>\n\n<h5 id=\"2-문종-프로젝트\">2. 문종 프로젝트</h5>\n<p>카카오에서는 이러한 오류 중 약 30만 개 이상의 어절을 수정하였고 여전히 발견되는 오류를 수정하고 있습니다. 내부적으로는 이것을 ‘문종 프로젝트’라는 이름으로 진행하고 있습니다.<sup id=\"fnref:5\"><a href=\"#fn:5\" class=\"footnote\">5</a></sup> 문종 프로젝트의 결과물을 공개하여 협력을 통해 발전해 가고자 제안<sup id=\"fnref:6\"><a href=\"#fn:6\" class=\"footnote\">6</a></sup>을 드렸지만, 아쉽게도 저작권 문제로 공개할 수 없게 되었습니다.</p>\n\n<h5 id=\"3-학습-코퍼스\">3. 학습 코퍼스</h5>\n<p>세종 코퍼스를 수정한 1천만 개의 어절에 더해 저희가 자체적으로 구축한 6만 개 어절의 코퍼스를 합하여 학습에 사용했습니다. 음절과 형태소의 정렬을 거치고 나면 최종적으로 약 85만 개의 문장과 1,003만 개의 어절이 전체 학습 코퍼스가 됩니다. 이 중 1만 개의 문장을 제외한 뒤 학습을 하고, 1만 개의 문장은 다시 5천 개씩 나눠 각각 dev, test 코퍼스로 활용했습니다.</p>\n\n<h5 id=\"4-품사-집합\">4. 품사 집합</h5>\n<p>세종 코퍼스의 품사 집합을 대부분 그대로 따르고 있지만, SWK・ZN・ZV・ZZ 4가지만 원본 품사 집합과 다릅니다. ZN・ZV・ZZ는 세종 품사 집합에서 각각 NF・NV・NA와 동일합니다. SWK의 경우 한글 자모만으로 이뤄진 형태소에 한해 사용했고 SW에 완전히 포함되는 하위 품사입니다. NF・NV의 경우 품사는 정의되어 있지만 세종 코퍼스에 한 번도 나타나지 않습니다. 추정 범주에 해당하는 품사는 NA만 나타나고 있는데, 카카오는 한글 자모가 나타나는 경우, 또는 띄어쓰기에 오타가 있는 경우에 한해 제한적으로 사용하였습니다. 아래는 그러한 예시들입니다.\n<img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/1_FgnAhzEVb7FIQd2bxm9LAXRog.png\" alt=\"[ 표 7 ] SWK, ZN, ZV, ZZ 태그가 사용된 예\" />￼</p>\n\n<h3 id=\"appendix---품사-집합\">Appendix - 품사 집합</h3>\n<p><img src=\"https://t1.daumcdn.net/thumb/R1280x0/?fname=http://t1.daumcdn.net/brunch/service/user/1oU7/image/7X4mqOJLRdhThEvJJUsAacRstXY.png\" alt=\"appendix\" /></p>\n\n<h3 id=\"참고문헌\">참고문헌</h3>\n\n<div class=\"footnotes\">\n  <ol>\n    <li id=\"fn:1\">\n      <p>참고 <a href=\"https://ko.wikipedia.org/wiki/%ED%98%95%ED%83%9C_%EB%B6%84%EC%84%9D\">https://ko.wikipedia.org/wiki/%ED%98%95%ED%83%9C_%EB%B6%84%EC%84%9D</a> <a href=\"#fnref:1\" class=\"reversefootnote\">&#8617;</a></p>\n    </li>\n    <li id=\"fn:2\">\n      <p>논문 : 심광섭, “음절 단위의 한국어 품사 태깅에서 원형 복원”, 소프트웨어 및 응용 제40권 제3호, 2013.  <a href=\"#fnref:2\" class=\"reversefootnote\">&#8617;</a></p>\n    </li>\n    <li id=\"fn:3\">\n      <p>논문 Yoon Kim, “Convolutional Neural Networks for Sentence Classification”, EMNLP, 2014. <a href=\"#fnref:3\" class=\"reversefootnote\">&#8617;</a></p>\n    </li>\n    <li id=\"fn:4\">\n      <p>참고 황용주 외 1인, “21세기 언어 말뭉치 제대로 살펴보기”, 새국어생활, 2016. <a href=\"#fnref:4\" class=\"reversefootnote\">&#8617;</a></p>\n    </li>\n    <li id=\"fn:5\">\n      <p>논문 한경은 외 2인, “공개와 협업을 통한 세종 형태 분석 말뭉치 오류 개선 방법”, 한글 및 한국어정보처리학술대회, 2017. <a href=\"#fnref:5\" class=\"reversefootnote\">&#8617;</a></p>\n    </li>\n    <li id=\"fn:6\">\n      <p>참고 <a href=\"https://ithub.korean.go.kr/user/member/memberQnaView.do?boardSeq=7&amp;articleSeq=94\">https://ithub.korean.go.kr/user/member/memberQnaView.do?boardSeq=7&amp;articleSeq=94</a> <a href=\"#fnref:6\" class=\"reversefootnote\">&#8617;</a></p>\n    </li>\n  </ol>\n</div>\n"
    } ,
  
    {
      "title"    : "블로그를 만들게 된 이유.",
      "category" : "",
      "tags"     : "talks",
      "url"      : "/talk/why-blog/",
      "date"     : "2019-06-12 02:37:00 +0900",
      "content"   : "<p>서핑을 하다 좋은 포스팅을 발견했을 때나 면접관에게 들었던 질문 혹은 어떠한 문제를 해결하기 위해\n했던 삽질과 노력들을 어딘가에 정리 할 수 있으면 좋을 것 같다는 생각은 항상 하고 있었다.</p>\n\n<p>누군가에게 보여준다기 보다 내가 정리할 곳이 필요해서 여러 차례 시도는 해봤지만, \n바쁘다는 핑계와 그럴듯하게 합리화 시킨 못한다는 이유로 말로만 하기 일쑤였는데 \n이번에 계획에 없던 휴식 기간에 만들어보기로 하고 그동안 눈여겨 보고있던 <a href=\"https://pages.github.com\">GitHub Pages</a>로 만들어 보았다.</p>\n\n<p>넓고 깊이 아는 개발자가 되고 싶다 그러기 위해서 항상 공부하는 개발자 이고 싶다.</p>\n\n<p>언제나 그러고 싶다.</p>\n\n"
    } 
  


  
    
,
  {
    "title"    : "404",
    "category" : "",
    "tags"     : "",
    "url"      : "/404.html",
    "date"     : "",
    "content"   : "<div style=\"text-align:center;\">\n    <h1>404 Not Found</h1>\n</div>\n"
  }
    
  
    
,
  {
    "title"    : "About Me.",
    "category" : "",
    "tags"     : "about",
    "url"      : "/about",
    "date"     : "",
    "content"   : "<hr />\n<h1 id=\"intro\">Intro</h1>\n<blockquote>\n  <p>이 블로그는 제가 그동안 경험하고 공부했던 내용들을 정리하기 위해 만들었습니다.<br /> \n주로 Spring으로 웹 프로젝트를 수행 했으며, 풀스택 개발자기 되기 위해<br /> \n언제나 노력하는 호기심 많은 11년차 개발자 입니다.<br />\n최근에는 <a href=\"https://vuejs.org/\">Vue</a> 와 <a href=\"https://www.python.org/\">Python</a> 에도 관심이 있습니다.</p>\n</blockquote>\n\n<hr />\n<h1 id=\"projects\">Projects</h1>\n\n<ul>\n  <li>E-Sports 글로벌 홈페이지 구축.</li>\n  <li>게임사 통합 운영 플랫폼 구축.</li>\n  <li>제조업 연구소 차세대 연구 관리 시스템 구축.</li>\n  <li>공동 주택 관리 솔루션 런칭.</li>\n  <li>통신사 기상정보 플랫폼 API 담당.</li>\n  <li>통신사 위치기반 소셜 서비스 런칭.</li>\n</ul>\n\n<hr />\n<h1 id=\"pr--skills\">PR &amp; Skills</h1>\n\n<blockquote>\n  <p>B2C, Admin, REST API, 솔루션, 기업 연구소, 게임사 통합 운영 플랫폼, 글로벌 홈페이지 등 \n<br />\n다양한 종류의 풍부한 프로젝트 수행 경험, 통신사의 위치 기반 소셜 서비스 프로젝트 수행 경험.</p>\n</blockquote>\n\n<ul>\n  <li>Language : Java, HTML, jQuery</li>\n  <li>OS : AWS, Linux, Unix, Windows Server 2003</li>\n  <li>Platform : Spring Boot, Spring, MyBatis, Android</li>\n  <li>Database : MySQL, Oracle</li>\n  <li>Development Tool : Intelli J, Eclipse, Putty, Secure CRT, Oracle Sql Developer, MySQL Workbench,<br />\n                  VM Ware Workstation, Nexacro, Sourcetree, JIRA, Confluence</li>\n  <li>Software Configuration Management : Subversion, Git</li>\n  <li>Debugging Tool : ADB(Android Debug Bridge), Http Watch, Chrome Advanced Rest Client, JSON Viewer</li>\n</ul>\n"
  }
    
  
    
,
  {
    "title"    : "Authors",
    "category" : "",
    "tags"     : "",
    "url"      : "/authors/",
    "date"     : "",
    "content"   : "\n<ul>\n  <li><a href=\"/authors/soultree1984\">soultree1984</a></li>\n</ul>\n\n"
  }
    
  
    
,
  {
    "title"    : "기술 행사",
    "category" : "",
    "tags"     : "events",
    "url"      : "/events/",
    "date"     : "",
    "content"   : "<h2 id=\"주최-if-kakao-개발자-컨퍼런스-2018\">[주최] if kakao 개발자 컨퍼런스 2018</h2>\n\n<ul>\n  <li><a href=\"https://if.kakao.com\">https://if.kakao.com/</a></li>\n  <li>일정: 2018년 9월 4일</li>\n  <li>장소: 서울 삼성동 COEX 그랜드볼룸</li>\n</ul>\n\n<h2 id=\"주최-카카오-code-festival-2018\">[주최] 카카오 Code Festival 2018</h2>\n\n<ul>\n  <li><a href=\"https://www.kakaocode.com\">https://www.kakaocode.com/</a></li>\n  <li>온라인 예선: 2018년 8월 4일(토) 오후 1시~7시</li>\n  <li>오프라인 본선: 2018년 8월 25일(토) 오후 1시~6시</li>\n  <li>장소: 카카오 판교 오피스</li>\n  <li>내용: 카카오에서 준비한 대학(원)생 프로그래밍 경진대회</li>\n</ul>\n\n<blockquote>\n  <p><strong>[행사 후기 및 문제 해설]</strong></p>\n\n  <ul>\n    <li><a href=\"https://brunch.co.kr/@andkakao/67\">즐거운 알고리듬 축제, 카카오 코드 페스티벌</a></li>\n    <li><a href=\"http://tech.kakao.com/2018/08/09/code-festival-2018-round-1/\">카카오 코드 페스티벌 2018 예선전 이야기</a></li>\n    <li><a href=\"http://tech.kakao.com/2018/09/12/code-festival-2018-round-2/\">카카오 코드 페스티벌 2018 본선 이야기</a></li>\n  </ul>\n</blockquote>\n\n<h2 id=\"주최-카카오-code-festival-2017\">[주최] 카카오 Code Festival 2017</h2>\n\n<ul>\n  <li>온라인 예선: 2017년 8월 5일(토) 오후 1시~7시</li>\n  <li>오프라인 본선: 2017년 9월 9일(토) 오후 1시~6시</li>\n  <li>장소: 성남시 경기창조경제혁신센터</li>\n  <li>내용: 카카오에서 준비한 대학(원)생 프로그래밍 경진대회</li>\n</ul>\n\n<blockquote>\n  <p><strong>[행사 후기 및 문제 해설]</strong></p>\n\n  <ul>\n    <li><a href=\"http://blog.kakaocorp.co.kr/648\">카카오 코드 페스티벌, 본선의 막이 열리다!</a></li>\n    <li><a href=\"http://tech.kakao.com/2017/08/11/code-festival-round-1/\">카카오 코드 페스티벌 예선전 이야기</a></li>\n    <li><a href=\"http://tech.kakao.com/2017/09/14/code-festival-round-2/\">카카오 코드 페스티벌 본선 이야기</a></li>\n  </ul>\n</blockquote>\n\n<h2 id=\"후원-pycon-apac-2016\">[후원] PyCon APAC 2016</h2>\n\n<ul>\n  <li><a href=\"https://www.pycon.kr/2016apac/\">https://www.pycon.kr/2016apac/</a></li>\n  <li>일정: 2016년 8월 13일 ~ 15일</li>\n  <li>장소: 강남구 코엑스 전시장</li>\n  <li>주최: 파이콘 한국 준비 위원회</li>\n</ul>\n\n<blockquote>\n  <p><strong>[후원 후기]</strong></p>\n\n  <ul>\n    <li><a href=\"http://tech.kakao.com/2016/08/19/gawibawibo/\">CODING BATTLE 가위바위보! - 못다한 이야기</a></li>\n    <li><a href=\"http://tech.kakao.com/pycon2016apac\">CODING BATTLE 가위바위보 이벤트 페이지</a></li>\n  </ul>\n</blockquote>\n\n<h2 id=\"후원-rtfm-나는-프로그래머다\">[후원] RT:FM 나는 프로그래머다</h2>\n\n<ul>\n  <li><a href=\"http://onoffmix.com/event/55258\">http://onoffmix.com/event/55258</a></li>\n  <li>일정: 2016년 6월 24일(금) 12:30~ 20:40</li>\n  <li>장소: 더케이트윈타워 A동 11층</li>\n  <li>주최: 한빛미디어, 나는 프로그래머다</li>\n</ul>\n\n<h2 id=\"후원-우리가-데이터를-쓰는-법how-we-use-data\">[후원] 우리가 데이터를 쓰는 법(How We Use Data)</h2>\n\n<ul>\n  <li>주최: <a href=\"http://www.gonnector.com\">고넥터(Gonnector)</a></li>\n  <li>일정: 2016년 04월 12일</li>\n  <li>장소: 역삼동 MARU180</li>\n</ul>\n\n<h2 id=\"후원-playnode-2015\">[후원] PlayNode 2015</h2>\n\n<ul>\n  <li><a href=\"http://playnode.io\">http://playnode.io</a></li>\n  <li>일정: 2015년 11월 12일</li>\n  <li>장소: 신대방동 전문건설회관</li>\n</ul>\n\n<h2 id=\"주최-api-bootcamp-2014\">[주최] API BootCamp 2014</h2>\n\n<ul>\n  <li>일시: 2014년 5월 10일(토)</li>\n  <li>장소: 다음커뮤니케이션 한남오피스 5F</li>\n  <li>내용: 주요 API 및 모바일 SDK 소개 및 실습(센서, 음성인식/로그인, OAuth 2.0 …)</li>\n</ul>\n\n<h2 id=\"후원-firefox-개발자-콘퍼런스-2014\">[후원] Firefox 개발자 콘퍼런스 2014</h2>\n\n<ul>\n  <li><a href=\"http://www.mozilla.or.kr/devcon/2014/\">http://www.mozilla.or.kr/devcon/2014/</a></li>\n  <li>일시: 2014년 4월 10일(목)</li>\n  <li>장소: 코엑스 콘퍼런스 센터 317호</li>\n</ul>\n\n<h2 id=\"주최-api-미트업-2014\">[주최] API 미트업 2014</h2>\n\n<ul>\n  <li>일시: 2014년 4월 8일(화)</li>\n  <li>장소: 역삼동 D.Camp</li>\n  <li>내용: 글로벌 API 서비스 동향 및 Daum API에 대한 발표</li>\n</ul>\n\n<h2 id=\"후원-ms-이매진컵-2014-국가대표-선발전\">[후원] MS 이매진컵 2014, 국가대표 선발전</h2>\n\n<ul>\n  <li>일시: 2014년 3월 27일(목) ~ 28일(금)</li>\n  <li>장소: 부산 동서대학교 센텀캠퍼스 소향씨어터</li>\n</ul>\n\n<h2 id=\"주최-devday-15th\">[주최] Devday 15th</h2>\n\n<ul>\n  <li>일시: 2014년 2월 28 ~ 29일</li>\n  <li>장소: 제주 스페이스.1</li>\n  <li>내용: 오픈 API를 이용한 창의적인 아이디어 구현과 개발자간 교류 확대</li>\n</ul>\n\n<h2 id=\"주최-devon-2013\">[주최] Devon 2013</h2>\n\n<ul>\n  <li>일시: 2013년 10월 26 ~ 27일</li>\n  <li>장소: 코엑스 전시장(Hall D1)</li>\n</ul>\n\n<h2 id=\"주최-devon-2012\">[주최] Devon 2012</h2>\n\n<ul>\n  <li>일시: 2012년 10월 12일</li>\n  <li>장소: 신도림 디큐브시티</li>\n</ul>\n\n<h2 id=\"주최-devon-2011\">[주최] Devon 2011</h2>\n\n<ul>\n  <li>일시: 2011년 11월 25일</li>\n  <li>장소: 신림동 쉐라톤서울 호텔 디큐브시티</li>\n</ul>\n"
  }
    
  
    
,
  {
    "title"    : "Tech",
    "category" : "",
    "tags"     : "",
    "url"      : "/",
    "date"     : "",
    "content"   : "<script>\n    $(\"#menu li\").removeClass(\"active\").eq(0).addClass(\"active\");\n</script>\n\n<ul id=\"post-list\">\n\n    \n\n        <li class=\"post-item post \">\n    <a href=\"/tech/khaiii/\">\n        <h3 class=\"post-title\">kakao의 오픈소스 Ep9 - Khaiii : 카카오의 딥러닝 기반 형태소 분석기</h3>\n        <p class=\"post-excerpt\">“카카오의 오픈소스를 소개합니다” 아홉 번째는 jamie.lim과 자연어 처리 파트 동료들이 함께 개발한 khaiii(Kakao Hangul Analyzer III)입니다. khaiii는 세종 코퍼스를 이용하여 CNN(Convolutional Neural Network, 합성곱 신경망) 기술을 적용해 학습한 형태소 분석기입니다. 디코더를 C++로 구현하여 GPU 없이도 비교적 빠르게 동작하며, Python 바인딩을 제공하고 있어서 편리하게 사용하실 수 있습니다. 앞으로 오픈소스 생태계를 통해 자연어 처리를 연구하는 분들께 도움이 되고, 또한 부족한 부분에 대해 도움을 받을 수 있으면 좋겠습니다. 아래는 카카오 AI 리포트에 포스팅한 카카오의 딥러닝 기반 형태소 분석기를...</p>\n    </a>\n    <p class=\"post-tags\">\n        \n            <a href=\"/tags/opensource\" title=\"opensource\"\n               class=\"tag tag-opensource\">opensource</a>\n        \n            <a href=\"/tags/khaiii\" title=\"khaiii\"\n               class=\"tag tag-khaiii\">khaiii</a>\n        \n            <a href=\"/tags/deep-learning\" title=\"deep-learning\"\n               class=\"tag tag-deep-learning\">deep-learning</a>\n        \n            <a href=\"/tags/cnn\" title=\"cnn\"\n               class=\"tag tag-cnn\">cnn</a>\n        \n            <a href=\"/tags/ai\" title=\"ai\"\n               class=\"tag tag-ai\">ai</a>\n        \n    </p>\n    <div class=\"post-meta\">\n        \n\n        <!--<a href=\"/authors/soultree1984\">-->\n        <a href=\"javascript:void(0);\">\n            <div class=\"author-image\"\n                 style=\"background-image:url(/files/authors/profile2.jpg);\">\n                <span class=\"sr-only\">soultree1984's profile image</span>\n            </div>\n            <p class=\"author-name\">soultree1984</p>\n        </a>\n        <p class=\"post-date\">2019-06-12 02:37</p>\n    </div>\n    <!--<div class=\"clearfix\"></div>-->\n</li>\n\n\n    \n\n</ul>\n\n<!--\n<ul id=\"pagination\" role=\"navigation\">\n    \n        \n        \n            <li id=\"page-prev\" class=\"disabled\"><span class=\"sr-only\">No Previous Page</span></li>\n        \n        \n            \n                <li class=\"page-number active\">1</li>\n                \n        \n        \n            <li id=\"page-next\" class=\"disabled\"><span class=\"sr-only\">No Next Page</span></li>\n        \n    \n</ul>\n-->\n"
  }
    
  
    
,
  {
    "title"    : "kakao의 오픈API",
    "category" : "",
    "tags"     : "openapi",
    "url"      : "/openapi/",
    "date"     : "",
    "content"   : "<h2 id=\"kakao-developers\"><a href=\"https://developers.kakao.com\">Kakao Developers</a></h2>\n\n<ul>\n  <li><a href=\"https://developers.kakao.com/features/platform\">플랫폼 API</a></li>\n  <li><a href=\"https://developers.kakao.com/features/platform#사용자관리\">사용자관리</a></li>\n  <li><a href=\"https://developers.kakao.com/features/platform#푸시-알림\">푸시알림</a></li>\n  <li><a href=\"https://developers.kakao.com/features/platform#앱로그-분석\">앱로그 분석</a></li>\n  <li><a href=\"https://developers.kakao.com/features/kakao\">카카오 서비스 API</a></li>\n  <li><a href=\"https://developers.kakao.com/features/kakao#카카오스토리-API\">카카오스토리</a></li>\n  <li><a href=\"https://developers.kakao.com/features/kakao#카카오톡-API\">카카오톡</a></li>\n  <li><a href=\"https://developers.kakao.com/features/kakao#카카오-링크\">카카오 링크</a></li>\n  <li><a href=\"https://developers.kakao.com/docs\">개발가이드</a></li>\n  <li><a href=\"https://devtalk.kakao.com/\">개발자포럼(DevTalk)</a></li>\n  <li><del><a href=\"http://www.kakao.com/services/api/kakao_link\">카카오톡 링크</a></del></li>\n  <li><del><a href=\"http://www.kakao.com/services/api/story_link\">스토리 링크</a></del></li>\n</ul>\n\n<h2 id=\"daum-developers\"><a href=\"https://developers.daum.net\">Daum Developers</a></h2>\n\n<ul>\n  <li><a href=\"https://developers.daum.net/console\">콘솔</a></li>\n  <li><a href=\"http://developers.daum.net/services\">API</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/search\">검색</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/newtone\">뉴톤</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/login\">로그인</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/local\">로컬</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/blog\">블로그</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/shopping\">쇼핑</a></li>\n  <li><a href=\"http://apis.map.daum.net\">지도</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/cafe\">카페</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/calendar\">캘린더</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/contents\">콘텐츠</a></li>\n  <li><a href=\"http://developers.daum.net/services/apis/user\">프로필</a></li>\n  <li><a href=\"http://cafe.daum.net/daumdna\">개발자 카페</a></li>\n</ul>\n\n<h2 id=\"카카오-게임-센터\"><a href=\"https://gamecenter.kakao.com/\">카카오 게임 센터</a></h2>\n\n<ul>\n  <li><a href=\"https://biz.kakao.com\">비즈 계정 센터</a></li>\n</ul>\n\n<h2 id=\"플러스친구\"><a href=\"https://center-pf.kakao.com/\">플러스친구</a></h2>\n\n<ul>\n  <li><a href=\"https://github.com/plusfriend/auto_reply\">API 문서</a></li>\n</ul>\n\n<h3 id=\"티스토리\"><a href=\"http://www.tistory.com/guide/blog\">티스토리</a></h3>\n\n<ul>\n  <li><a href=\"http://www.tistory.com/guide/api/oauth\">OAuth 인증 가이드</a></li>\n  <li><a href=\"http://www.tistory.com/guide/api/index\">API 가이드</a>\n    <ul>\n      <li><a href=\"http://www.tistory.com/guide/api/blog\">블로그</a></li>\n      <li><a href=\"http://www.tistory.com/guide/api/post\">포스트</a></li>\n      <li><a href=\"http://www.tistory.com/guide/api/category\">카테고리</a></li>\n      <li><a href=\"http://www.tistory.com/guide/api/comment\">댓글</a></li>\n      <li><a href=\"http://www.tistory.com/guide/api/guestbook\">방명록</a></li>\n    </ul>\n  </li>\n</ul>\n\n<!--\n* 커버 이미지 출처: [API Testing and some amazing testing tools](http://go-gaga-over-testing.blogspot.kr/2013/11/api-testing-and-some-amazing-testing.html)\n-->\n"
  }
    
  
    
,
  {
    "title"    : "kakao의 오픈소스",
    "category" : "",
    "tags"     : "opensource, s2graph, mrte, hbase-tools, hbase-region-inspector, adt, daum-editor",
    "url"      : "/opensource/",
    "date"     : "",
    "content"   : "<p><a id=\"forkme\" href=\"https://github.com/kakao\"></a></p>\n\n<h2 id=\"apache-s2graph\">Apache S2Graph</h2>\n\n<ul>\n  <li><a href=\"http://tech.kakao.com/2016/01/29/opensource-1-s2graph/\">대용량 분산 그래프DB “S2Graph”</a></li>\n  <li><a href=\"http://s2graph.incubator.apache.org\">아파치 인큐베이터 프로젝트</a>로 선정(2015/11/29)</li>\n  <li><a href=\"http://github.com/kakao/s2graph\">http://github.com/kakao/s2graph</a> -&gt; <a href=\"https://github.com/apache/incubator-s2graph\">https://github.com/apache/incubator-s2graph</a></li>\n  <li><a href=\"http://scala-lang.org\">Scala</a>, <a href=\"https://www.playframework.com\">Play 프레임웍</a>, <a href=\"https://hbase.apache.org\">HBase</a> 외</li>\n</ul>\n\n<hr />\n\n<h2 id=\"hbase-tools\">HBase Tools</h2>\n\n<ul>\n  <li><a href=\"http://tech.kakao.com/2016/03/24/opensource-4-hbase-tools/\">HBase 명령행 도구 모음</a></li>\n  <li><a href=\"https://github.com/kakao/hbase-tools\">https://github.com/kakao/hbase-tools</a></li>\n  <li><a href=\"http://clojure.org\">Clojure</a>, <a href=\"https://hbase.apache.org\">HBase</a></li>\n</ul>\n\n<h2 id=\"hbase-region-inspector\">HBase Region Inspector</h2>\n<ul>\n  <li><a href=\"http://tech.kakao.com/2016/03/11/opensource-3-hri/\">HBase 리젼 통계 시각화 도구</a></li>\n  <li><a href=\"https://github.com/kakao/hbase-region-inspector\">https://github.com/kakao/hbase-region-inspector</a></li>\n  <li><a href=\"http://clojure.org\">Clojure</a>, <a href=\"https://hbase.apache.org\">HBase</a></li>\n</ul>\n\n<h2 id=\"hbase-packet-inspector\">HBase Packet Inspector</h2>\n\n<ul>\n  <li><a href=\"http://tech.kakao.com/2017/09/22/opensource-8-hbase-packet-inspector/\">HBase 리젼서버의 네트워크 패킷을 분석해 요청과 응답 정보를 추출하는 툴</a></li>\n  <li><a href=\"https://github.com/kakao/hbase-packet-inspector\">https://github.com/kakao/hbase-packet-inspector</a></li>\n  <li><a href=\"http://clojure.org\">Clojure</a>, <a href=\"https://hbase.apache.org\">HBase</a></li>\n</ul>\n\n<hr />\n\n<h2 id=\"cmux\">CMUX</h2>\n\n<ul>\n  <li><a href=\"http://tech.kakao.com/2017/07/12/opensource-7-cmux/\">CMUX: CLI에 날개를 달자!</a></li>\n  <li>Cloudera Manager 기반의 하둡 클러스터를 관리하는데 필요한 대화형 커맨드라인 인터페이스 도구들</li>\n  <li><a href=\"https://github.com/kakao/cmux\">https://github.com/kakao/cmux</a></li>\n  <li><a href=\"https://www.cloudera.com/products/product-components/cloudera-manager.html\">Cloudera Manager</a>, <a href=\"https://github.com/tmux/tmux/wiki\">TMUX</a>, <a href=\"https://github.com/junegunn/fzf\">FZF</a>, <a href=\"https://www.ruby-lang.org\">Ruby</a></li>\n</ul>\n\n<hr />\n\n<h2 id=\"mrtemysql-realtime-traffic-emulator\">MRTE(MySQL Realtime Traffic Emulator)</h2>\n\n<ul>\n  <li><a href=\"http://tech.kakao.com/2016/02/16/opensource-2-mtre/\">MySQL 트래픽 테스트 환경 구축 도구</a></li>\n  <li>실제 서비스의 MySQL 트래픽을 실시간으로 수집하고</li>\n  <li><a href=\"https://github.com/kakao/MRTE-Collector\">https://github.com/kakao/MRTE-Collector</a></li>\n  <li>실제 서비스에서 수집한 데이터를 테스트 환경의 MySQL에서 재현</li>\n  <li><a href=\"https://github.com/kakao/MRTE-Player\">https://github.com/kakao/MRTE-Player</a></li>\n  <li><a href=\"https://golang.org\">Go</a>, <a href=\"http://www.mysql.com\">MySQL</a></li>\n</ul>\n\n<hr />\n\n<h2 id=\"adt---almighty-data-transmitter\">ADT - Almighty Data Transmitter</h2>\n\n<ul>\n  <li><a href=\"http://tech.kakao.com/2016/06/27/opensource-5-adt/\">MySQL 기반 만능 데이터 전송 도구</a></li>\n  <li>MySQL 샤드 재분배, 실시간 마이그레이션</li>\n  <li><a href=\"https://github.com/kakao/adt\">https://github.com/kakao/adt</a></li>\n</ul>\n\n<hr />\n\n<h2 id=\"n2---approximate-nearest-neighbor\">N2 - approximate Nearest Neighbor</h2>\n\n<ul>\n  <li>N차원 벡터에서 최근접 이웃을 빠르게 찾기 위해 Hierarchical Navigable Small World graphs(HNSW) 알고리즘을 구현한 라이브러리</li>\n  <li>nmslib 기반으로 개선한 버전으로 사용이 쉽고, 검색속도와 인덱스 생성 시간이 빠름</li>\n  <li><a href=\"https://github.com/kakao/n2\">https://github.com/kakao/n2</a></li>\n  <li><a href=\"https://arxiv.org/abs/1603.09320\">HNSW</a>, <a href=\"https://github.com/searchivarius/NMSLIB\">NMSLIB</a>, <a href=\"https://github.com/spotify/annoy\">Annoy</a>, <a href=\"https://golang.org\">Go</a></li>\n</ul>\n\n<hr />\n\n<blockquote>\n  <p><a href=\"http://github.com/kakao\">http://github.com/kakao</a> 에서 다양한 kakao의 오픈소스 프로젝트를 만나보세요.</p>\n</blockquote>\n\n"
  }
    
  
    
,
  {
    "title"    : "코딩배틀 가위바위보 in 파이콘 2016 APAC",
    "category" : "",
    "tags"     : "events",
    "url"      : "/pycon2016apac/",
    "date"     : "",
    "content"   : "<p><a href=\"http://tech.kakao.com/2016/08/19/gawibawibo/\">CODING BATTLE 가위바위보! - 못다한 이야기</a> 참조</p>\n\n<hr />\n\n<blockquote>\n  <h2 id=\"둘째날814-경기-결과\">둘째날(8/14) 경기 결과</h2>\n\n  <ul>\n    <li>1위 : qkqnrpa</li>\n    <li>2위 : johnjanghochoi</li>\n    <li>3위 : bak723 &amp; bage79</li>\n  </ul>\n</blockquote>\n\n<hr />\n\n<blockquote>\n  <h2 id=\"첫째날813-경기-결과\">첫째날(8/13) 경기 결과</h2>\n\n  <ul>\n    <li>1위 : k239507</li>\n    <li>2위 : hulk</li>\n    <li>3위 : eclipse1725 &amp; hahanbyul</li>\n  </ul>\n</blockquote>\n\n<hr />\n\n<h2 id=\"참가-자격\">참가 자격</h2>\n\n<ul>\n  <li><a href=\"https://www.pycon.kr/2016apac\">파이콘 2016 APAC</a> 참석자 누구나 가능합니다.</li>\n  <li>주의: <a href=\"http://kakaocorp.com\">Kakao Corp.</a>의 임직원도 참여하실 수 있으나, 경품은 받으실 수 없습니다.</li>\n  <li><strong>8/14변경</strong> 어제(8/13) 참가자도 다시 참가하실 수 있지만, 동일한 상품을 중복으로 받을 수 없습니다.</li>\n</ul>\n\n<h2 id=\"참여-방법\">참여 방법</h2>\n\n<p>아래의 요구사항을 만족하는 <strong>파이썬 소스코드</strong>를 <a href=\"mailto:opensource@kakaocorp.com\">opensource@kakaocorp.com</a>에게 메일로 보내주세요.</p>\n\n<ul>\n  <li>메일 제목: <code class=\"highlighter-rouge\">pycon2016apac</code></li>\n  <li>첨부 파일: <code class=\"highlighter-rouge\">player.py</code> 또는 <code class=\"highlighter-rouge\">player.py</code>를 포함하는 <code class=\"highlighter-rouge\">player.zip</code></li>\n  <li>신청 마감: 파이콘 2016 APAC 행사 양일 <strong>오후 2시</strong></li>\n  <li>참가 인원: 선착순 <strong>100명</strong></li>\n  <li>결과 발표: 파이콘 2016 APAC 행사 양일 <strong>오후 5시</strong>(카카오 부스에서 Live!)</li>\n</ul>\n\n<blockquote>\n  <p><img src=\"http://item.kakaocdn.net/do/-26p06+UqCd0OAgiRHNZwHaq4FJCveCBKCNZV-bZscw_/477c52636630bc15b2890bde099cba0a1667fc7b08261b4c493670baa83d5cb9\" class=\"pull-right\" />\n<strong>21세기에 왠 메일?</strong></p>\n\n  <p>애초 계획은 클라우드 서버에 올려서 서버-to-서버 RESTful API를 게임을 진행하는 방식이었지만,\n행사장의 극도로 불안정한 네트웍을 고려하여, 로컬에서 개발하고 동작할 수 있는 지금의 방식으로 변경하였습니다.</p>\n\n  <p>저도 급하게 바꾸느라 죽을 맛이에요 ㅠㅠ</p>\n</blockquote>\n\n<h2 id=\"게임-규칙\">게임 규칙</h2>\n\n<ul>\n  <li><strong>각 라운드별로 정해진 회수</strong>의 가위-바위-보에서 점수를 많이 획득한 플레이어가 승리합니다.</li>\n  <li>예선전: 100회</li>\n  <li>본선 토너먼트(32강, 16강, 8강): 1000회</li>\n  <li>준결승: 5000회</li>\n  <li>결승: 10000회</li>\n  <li>승리는 <strong>3점</strong>, 무승부는 <strong>1점</strong>, 패배는 <strong>0점</strong> 입니다.(주의: 무승부에 점수가 있음!)</li>\n  <li>승자는 <strong>총점</strong> &gt; <strong>다승</strong> &gt; <strong>참가접수시간</strong> 순으로 결정됩니다.</li>\n  <li>예선전은 <strong>풀 리그(full league)</strong> 방식으로 진행됩니다. 즉, 각 참가자는 모든 다른 참가자와 대결합니다.</li>\n  <li>예선전 결과 상위 <strong>32명</strong>이 본선 토너먼트로 진출합니다.(참자가 숫자에 따라 본선 토너먼트 시작 인원이 달라질 수 있습니다)</li>\n  <li>본선은 <strong>토너먼트(tournament)</strong> 방식으로 진행됩니다. 최고 득점자와 최저 득점자가 대결합니다.</li>\n  <li>16강 - 8강 - 준결승 - 결승을 거쳐 우승자가 나올때 까지 게임이 계속됩니다.</li>\n  <li>주의: <strong>제출한 코드</strong>에서 발생하는 오류는 <strong>패배</strong>로 처리됩니다.</li>\n</ul>\n\n<h2 id=\"시상-내역\">시상 내역</h2>\n\n<ul>\n  <li>우승: <strong>큰</strong> 라이언</li>\n  <li>준우승:  캔들 워머</li>\n  <li>3위, 4위: <strong>작은</strong> 라이언</li>\n  <li>예선전 참가자 전원: 카카오프렌즈 목베개</li>\n  <li><strong>8/14변경</strong> 어제(8/13) 참가했더라도 오늘 참가 가능</li>\n  <li><strong>8/14변경</strong> 어제 수령한 상품과 동일한 상품/기념품 수령 불가(다른 상품은 가능)</li>\n  <li>positive: 어제는 32강 오늘은 3위, 어제는 3위 오늘은 우승… 등</li>\n  <li>negative: 어제는 32강 오늘은 8강, 어제는 4위 오늘은 3위… 등</li>\n</ul>\n\n<h2 id=\"요구사항\">요구사항</h2>\n\n<ol>\n  <li><code class=\"highlighter-rouge\">파이썬3</code>을 사용하여, <code class=\"highlighter-rouge\">player.py</code> 파일을 작성합니다.</li>\n  <li><code class=\"highlighter-rouge\">상대 플레이어의 직전까지의 경기 기록</code>을 전달받아</li>\n  <li>가위(<code class=\"highlighter-rouge\">gawi</code>), 바위(<code class=\"highlighter-rouge\">bawi</code>), 보(<code class=\"highlighter-rouge\">bo</code>) 중의 하나를 리턴하는</li>\n  <li>함수 <code class=\"highlighter-rouge\">show_me_the_hand</code>를 작성하세요.</li>\n  <li><strong>8/14변경</strong> 확장 패키지 사용 불가!</li>\n  <li><strong>8/14변경</strong> <code class=\"highlighter-rouge\">random</code> 패키지, <code class=\"highlighter-rouge\">os.urandom()</code> 을 포함한 기본 파이썬 패키지에 포함된 random 사용 불가!</li>\n  <li><strong>8/14변경</strong> 이 홈페이지의 예제와 동일한 코드를 제출하면 실격!</li>\n</ol>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>경기기록 ::= [ (가위바위보, 승무패), ...]\n가위바위보 ::= 'gawi' | 'bawi' | 'bo' ('gawi'=가위, 'bawi'=바위, 'bo'=보)\n승무패 ::= 1 | 0 | -1 (1=승리, 0=무승, -1=패배)\n</code></pre></div></div>\n\n<h3 id=\"예제1-가위-바위-보를-랜덤으로-내는-플레이어\">예제1: 가위, 바위, 보를 <strong>랜덤</strong>으로 내는 플레이어</h3>\n\n<ul>\n  <li><strong>8/14변경</strong> 오늘 이렇게 내면 실격!!!</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">choice</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">show_me_the_hand</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">):</span>\n    <span class=\"c\"># 상대방이 지금까지 뭘 냈던 랜덤으로 선택</span>\n    <span class=\"k\">return</span> <span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"s\">'gawi'</span><span class=\"p\">,</span> <span class=\"s\">'bawi'</span><span class=\"p\">,</span> <span class=\"s\">'bo'</span><span class=\"p\">])</span>\n</code></pre></div></div>\n\n<h4 id=\"예제2-최초-한번은-랜덤으로-이후부터는-상대방이-낸-걸-따라내는-플레이어\">예제2: 최초 한번은 <strong>랜덤</strong>으로, 이후부터는 상대방이 낸 걸 <strong>따라</strong>내는 플레이어</h4>\n\n<ul>\n  <li><strong>8/14변경</strong> 오늘 이렇게 내면 실격!!!</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">choice</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">show_me_the_hand</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">):</span>\n    <span class=\"c\"># 최초 한번은 랜덤...</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"s\">'gawi'</span><span class=\"p\">,</span> <span class=\"s\">'bawi'</span><span class=\"p\">,</span> <span class=\"s\">'bo'</span><span class=\"p\">])</span>\n    <span class=\"c\"># 이후에는 상대방이 낸 걸 따라내는 플레이어</span>\n    <span class=\"k\">return</span> <span class=\"n\">records</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</code></pre></div></div>\n\n<h4 id=\"예제3-항상-주먹만-내는-플레이어\">예제3: 항상 <code class=\"highlighter-rouge\">주먹</code>만 내는 플레이어</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">show_me_the_hand</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">):</span>\n    <span class=\"c\"># 나는 주먹만 내!!!</span>\n    <span class=\"k\">return</span> <span class=\"s\">'bawi'</span>\n</code></pre></div></div>\n\n<h4 id=\"예제4-가위-바위-보를-돌아가면서-내는-플레이어\">예제4: <code class=\"highlighter-rouge\">가위</code>, <code class=\"highlighter-rouge\">바위</code>, <code class=\"highlighter-rouge\">보</code>를 돌아가면서 내는 플레이어</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">hands</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'gawi'</span><span class=\"p\">,</span> <span class=\"s\">'bawi'</span><span class=\"p\">,</span> <span class=\"s\">'bo'</span><span class=\"p\">]</span>\n<span class=\"n\">my_hand</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">show_me_the_hand</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">):</span>\n    <span class=\"n\">my_hand</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">my_hand</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">3</span>\n    <span class=\"k\">return</span> <span class=\"n\">hands</span><span class=\"p\">[</span><span class=\"n\">my_hand</span><span class=\"p\">]</span>\n</code></pre></div></div>\n\n<h4 id=\"테스트-방법pseudo-code\">테스트 방법(pseudo code):</h4>\n\n<ul>\n  <li>이 코드는 참가자의 이해를 돕기위한 pseudo code입니다.</li>\n  <li><strong>8/14변경</strong> 변경된 부분에 주의하세요!</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">player1</span>\n<span class=\"kn\">import</span> <span class=\"nn\">player2</span>\n\n<span class=\"n\">r1</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">r2</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n    <span class=\"n\">h1</span> <span class=\"o\">=</span> <span class=\"n\">player1</span><span class=\"o\">.</span><span class=\"n\">show_me_the_hand</span><span class=\"p\">(</span><span class=\"n\">r2</span><span class=\"p\">)</span>\n    <span class=\"n\">h2</span> <span class=\"o\">=</span> <span class=\"n\">player2</span><span class=\"o\">.</span><span class=\"n\">show_me_the_hand</span><span class=\"p\">(</span><span class=\"n\">r1</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">h1</span> <span class=\"o\">==</span> <span class=\"n\">h2</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'match </span><span class=\"si\">%</span><span class=\"s\">d of 1000: tie'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">elif</span> <span class=\"p\">(</span><span class=\"n\">h1</span> <span class=\"o\">==</span> <span class=\"s\">'gawi'</span> <span class=\"ow\">and</span> <span class=\"n\">h2</span> <span class=\"o\">==</span> <span class=\"s\">'bo'</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"n\">h1</span> <span class=\"o\">==</span> <span class=\"s\">'bawi'</span> <span class=\"ow\">and</span> <span class=\"n\">h2</span> <span class=\"o\">==</span> <span class=\"s\">'gawi'</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"n\">h1</span> <span class=\"o\">==</span> <span class=\"s\">'bo'</span> <span class=\"ow\">and</span> <span class=\"n\">h2</span> <span class=\"o\">==</span> <span class=\"s\">'bawi'</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'match </span><span class=\"si\">%</span><span class=\"s\">d of 1000: p1 win'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'match </span><span class=\"si\">%</span><span class=\"s\">d of 1000: p2 win'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n    <span class=\"n\">r1</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">h1</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">))</span>  <span class=\"c\"># NOTE: 어제와 달라졌습니다!!!</span>\n    <span class=\"n\">r2</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">h2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">r</span><span class=\"p\">))</span>  <span class=\"c\"># NOTE: 어제와 달라졌습니다!!!</span>\n    <span class=\"c\"># blah blah ...</span>\n</code></pre></div></div>\n\n<hr />\n\n<p><a href=\"http://tech.kakao.com/2016/08/19/gawibawibo/\">CODING BATTLE 가위바위보! - 못다한 이야기</a> 참조</p>\n"
  }
    
  
    
  
    
  
    
  
    
  
    
  
    
  
    
,
  {
    "title"    : "Talk",
    "category" : "",
    "tags"     : "refer",
    "url"      : "/talks",
    "date"     : "",
    "content"   : "<script>\n    $(\"#menu li\").removeClass(\"active\").eq(1).addClass(\"active\");\n</script>\n\n<ul id=\"post-list\">\n    {% for post in site.categories.talk %}\n        {% include item_talks.html %}\n    {% endfor %}\n</ul>"
  }
    
  
]
